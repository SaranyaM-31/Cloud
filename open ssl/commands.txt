AES Encryption/Decryption

Create plain.txt

SARANYA M
23IT133


Encrypt using AES-256-CBC

openssl enc -aes-256-cbc -salt -pbkdf2 -in plain.txt -out plain.enc -k mypassword


✅ This works. You can also use other block cipher modes: -aes-256-ecb, -aes-256-cfb, -aes-256-ofb, -aes-256-ctr.

Display contents of encrypted file (Windows)

certutil -dump plain.enc


✅ Works.

Decrypt back

openssl enc -d -aes-256-cbc -salt -pbkdf2 -in plain.enc -out message1.txt -k mypassword


✅ Works.

Display decrypted contents

type message1.txt


✅ Works.

Avalanche Effect

Change one character in plain.txt and re-encrypt.

Count bits changed: For AES, most bits in ciphertext change due to avalanche effect.

You can do a binary comparison using fc /b plain1.enc plain2.enc (Windows) to see differences.

RSA Key Generation and Encryption/Decryption

Generate private key

openssl genrsa -out pvtkey.pem 2048


✅ Works (use 2048-bit for security).

Generate public key

openssl rsa -pubout -in pvtkey.pem -out pubkey.pem


✅ Works.

Display private key

openssl rsa -text -in pvtkey.pem


✅ Works. Will show modulus, exponents, etc.

Encrypt using RSA public key

openssl pkeyutl -encrypt -in plain.txt -pubin -inkey pubkey.pem -out c1.bin


✅ Works.

Display encrypted file

certutil -dump c1.bin


✅ Works.

Decrypt using private key

openssl pkeyutl -decrypt -in c1.bin -inkey pvtkey.pem -out dec1.txt


✅ Works.

Display decrypted file

type dec1.txt


✅ Works.

Hashes

MD5 hash

openssl md5 plain.txt


✅ Works.

SHA-256 hash

openssl sha256 plain.txt


✅ Works (make sure sha256 is lowercase, not SHA256).

Digital Signature

Generate signature using SHA-1

openssl dgst -sha1 -sign pvtkey.pem -out s.bin plain.txt


✅ Works.

Display signature contents

certutil -dump s.bin


✅ Works.

Verify signature

openssl dgst -sha1 -verify pubkey.pem -signature s.bin plain.txt


✅ Works.